/****************************************************************************

Copyright (c) 2000 - 2012 Novell, Inc.
All Rights Reserved.

This program is free software; you can redistribute it and/or
modify it under the terms of version 2 of the GNU General Public License as
published by the Free Software Foundation.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, contact Novell, Inc.

To contact Novell about this file by physical or electronic mail,
you may find current contact information at www.novell.com

****************************************************************************/
/****************************************************************************

Copyright (c) 2000 - 2012 Novell, Inc.
All Rights Reserved.

This program is free software; you can redistribute it and/or
modify it under the terms of version 2 of the GNU General Public License as
published by the Free Software Foundation.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, contact Novell, Inc.

To contact Novell about this file by physical or electronic mail,
you may find current contact information at www.novell.com

****************************************************************************/
/**
 * Package:	Configuration of heartbeat
 * Authors:	Martin Lazar <mlazar@suse.cz>
 *
 * $Id$
 */

{

textdomain "heartbeat";

import "Label";
import "Wizard";
import "Heartbeat";
import "Popup";
import "CWM";

//include "heartbeat/helps.ycp";

list<string> DIALOG = [
    "node_conf",
    "auth_conf",
    "media_conf",
    "startup_conf"

/*    "stonith_conf", */
/*     "resources_conf", */
/*     "timeouts_conf", */
/*     "ipfail_conf", */
/*     "group_conf" */
];

map PARENT = $[
    "group_conf":"ipfail_conf"
];

map NAME = $[
    "startup_conf":	_("Start-up Configuration"),
    "node_conf":	_("Node Configuration"),
    "media_conf":	_("Media Configuration"),
    "auth_conf":	_("Authentication Keys"),
    "resources_conf":	_("Resources"),
    "stonith_conf":	_("STONITH Configuration"),
    "timeouts_conf":	_("Time-outs"),
    "ipfail_conf":	_("IP Fail"),
    "group_conf":	_("Ping Groups")
];

boolean Modified() {
    return Heartbeat::Modified();
}

boolean ReallyAbort() {
    return !Heartbeat::Modified() || Popup::ReallyAbort(true);
}

boolean PollAbort() {
    return UI::PollInput() == `abort;
}

boolean cmpList(list a, list b)
{
    boolean same = true;
    if (size(a) != size(b)) {
	same = false;
	// TODO!!
    }
    return false;
}

any my_SetContents(string conf, term contents)
{
    Wizard::SetContents("Heartbeat - " + NAME[conf]:"", 
	contents, HELPS[conf]:"", true, true);

    if (UI::WidgetExists(`id(`wizardTree)))
    {
//	UI::ChangeWidget(`id(`wizardTree), `CurrentItem, current_dialog);
	UI::SetFocus (`id (`wizardTree));
    }

    if (Heartbeat::firstrun) {
	UI::ChangeWidget(`id(`back), `Enabled, conf != "node_conf");
        if (conf == "startup_conf") {
	    UI::WizardCommand(`SetNextButtonLabel( Label::FinishButton() ) );
	    Wizard::SetNextButton(`next, Label::FinishButton());
	} else {
    	    UI::WizardCommand(`SetNextButtonLabel( Label::NextButton() ) );
	    Wizard::SetNextButton(`next, Label::NextButton());
	}
    }
}

void myHelp(string help)
{
    UI::OpenDialog( `opt(`decorated ),
	`HBox( `VSpacing(16),
	    `VBox(
		`HSpacing(60),
		`VSpacing(0.5),
		`RichText(HELPS[help]:""),
		`VSpacing(1.5),
		`PushButton(`id(`ok), `opt(`default, `key_F10), Label::OKButton())
	    )
	)
    );

    UI::SetFocus(`id(`ok));
    UI::UserInput();
    UI::CloseDialog();
}

}
