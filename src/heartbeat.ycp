/**
 * File:	clients/heartbeat.ycp
 * Package:	Configuration of heartbeat
 * Summary:	Main file
 * Authors:	Martin Lazar <mlazar@suse.cz>
 *
 * $Id$
 *
 * Main file for heartbeat configuration. Uses all other files.
 */

{

/***
 * <h3>Configuration of heartbeat</h3>
 */

textdomain "heartbeat";

/* The main () */
y2milestone ("----------------------------------------");
y2milestone ("Heartbeat module started");

import "CommandLine";
import "Report";

include "heartbeat/wizards.ycp";
include "heartbeat/commandline.ycp";

map cmdline_description = $[
    "id" 	: "heartbeat",
    /* Command line help text for the Heartbeat module */
    "help"	: _("Configuration of high availability (HA) cluster using Heartbeat service."),
    "guihandler"        : HeartbeatSequence,
    "initialize"        : ReadHandler,
    "finish"            : Heartbeat::Write,
    "actions"           : $[
	// functionality description
	"node"	: $[
            "handler"   : NodeHandler,
            // translators: command line help text for add action
            "help"      : _("Configure a list of servers for the cluster."),
	],
	"medium"	: $[
            "handler"   : MediumHandler,
            // translators: command line help text for add action
            "help"      : _("Set the communication between the nodes of the cluster."),
	],
	"authentication"	: $[
            "handler"   : AuthHandler,
            // translators: command line help text for add action
            "help"      : _("Configure authentication of the nodes."),
	],
	"start"	: $[
            "handler"   : StartHandler,
            // translators: command line help text for add action
            "help"      : _("Configure automatic start of the service at boot."),
	],
    ],
    // descriptions of options
    "options"		: $[
	"add" : $[
            // translators: command line help text for the 'play' option
            "help"      : _("Add a new item to the list."),
        ],
	"delete" : $[
            // translators: command line help text for the 'play' option
            "help"      : _("Delete an item from the list."),
        ],
	"list" : $[
            // translators: command line help text for the 'play' option
            "help"      : _("Display the configuration."),
        ],
	"name" : $[
            // translators: command line help text for the 'play' option
            "help"      : _("Name of the node in the cluster."),
	    "type"      : "string"
        ],
	"type" : $[
            // translators: command line help text for the 'play' option
            "help"      : _("Set the communication mode to 'bcast' for broadcast or 'mcast' for multicast."),
	    "type"      : "string"
        ],
	"device" : $[
            // translators: command line help text for the 'play' option
            "help"      : _("Network device (e.g. eth0) used for communication."),
	    "type"      : "string"
        ],
	"address" : $[
            // translators: command line help text for the 'play' option
            "help"      : _("IP address of the multicast group (224.0.0.0 - 239.255.255.255)."),
	    "type"      : "string"
        ],
	"ttl" : $[
            // translators: command line help text for the 'play' option
            "help"      : _("TTL value (1-255, default is 2)."),
	    "type"      : "integer"
        ],
	"udp" : $[
            // translators: command line help text for the 'play' option
            "help"      : _("UDP port number (default is 694)."),
	    "type"      : "integer"
        ],
	"method" : $[
            // translators: command line help text for the 'play' option
            "help"      : _("Set authentication method to 'crc' (no security), 'sha1' or 'md5'."),
	    "type"      : "string"
        ],
	"key" : $[
            // translators: command line help text for the 'play' option
            "help"      : _("The authentication key."),
	    "type"      : "string"
        ],
	"enable" : $[
            // translators: command line help text for the 'play' option
            "help"      : _("Enable automatic start of the service at boot."),
        ],
	"disable" : $[
            // translators: command line help text for the 'play' option
            "help"      : _("Disable automatic start of the service at boot."),
        ],
	"set" : $[
            // translators: command line help text for the 'play' option
            "help"      : _("Set the configuration."),
        ],
	"status" : $[
            // translators: command line help text for the 'play' option
            "help"      : _("Print status of the automatic start at boot."),
        ],
    ],
    // map options to commands
    "mappings"		: $[
	"node" : ["add", "delete", "list", "name"],
	"medium" : ["add", "delete", "list", "type", "device", "address", "ttl", "set", "udp"],
	"authentication" : ["set", "list", "method", "key"],
	"start" : [ "status", "enable", "disable"],
    ]
];

/* is this proposal or not? */
boolean propose = false;
list args = WFM::Args();
if(size(args) > 0) {
    if(is(WFM::Args(0), path) && WFM::Args(0) == .propose) {
        y2milestone("Using PROPOSE mode");
        propose = true;
    }
}

/* main ui function */
any ret = nil;

if(propose) ret = HeartbeatAutoSequence();
else ret = CommandLine::Run(cmdline_description);
y2debug("ret=%1", ret);

/* Finish */
y2milestone("Heartbeat module finished");
y2milestone("----------------------------------------");

return ret;

/* EOF */
}
